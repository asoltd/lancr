// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/lancr/v1/hero.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Financials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance float32 `protobuf:"fixed32,1,opt,name=balance,proto3" json:"balance,omitempty"`
	// TODO this is not a good way to encapsulate withdraw frequency
	WithdrawFrequency string  `protobuf:"bytes,2,opt,name=withdraw_frequency,json=withdrawFrequency,proto3" json:"withdraw_frequency,omitempty"`
	WithdrawThreshold float32 `protobuf:"fixed32,3,opt,name=withdraw_threshold,json=withdrawThreshold,proto3" json:"withdraw_threshold,omitempty"`
	CardEnding        int32   `protobuf:"varint,4,opt,name=card_ending,json=cardEnding,proto3" json:"card_ending,omitempty"`
	CardType          string  `protobuf:"bytes,5,opt,name=card_type,json=cardType,proto3" json:"card_type,omitempty"`
}

func (x *Financials) Reset() {
	*x = Financials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lancr_v1_hero_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Financials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Financials) ProtoMessage() {}

func (x *Financials) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lancr_v1_hero_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Financials.ProtoReflect.Descriptor instead.
func (*Financials) Descriptor() ([]byte, []int) {
	return file_proto_lancr_v1_hero_proto_rawDescGZIP(), []int{0}
}

func (x *Financials) GetBalance() float32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Financials) GetWithdrawFrequency() string {
	if x != nil {
		return x.WithdrawFrequency
	}
	return ""
}

func (x *Financials) GetWithdrawThreshold() float32 {
	if x != nil {
		return x.WithdrawThreshold
	}
	return 0
}

func (x *Financials) GetCardEnding() int32 {
	if x != nil {
		return x.CardEnding
	}
	return 0
}

func (x *Financials) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

type NotificationPreferences struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuestModified             bool `protobuf:"varint,1,opt,name=quest_modified,json=questModified,proto3" json:"quest_modified,omitempty"`
	ProposalReceived          bool `protobuf:"varint,2,opt,name=proposal_received,json=proposalReceived,proto3" json:"proposal_received,omitempty"`
	InterviewAccepted         bool `protobuf:"varint,3,opt,name=interview_accepted,json=interviewAccepted,proto3" json:"interview_accepted,omitempty"`
	InterviewProposalDeclined bool `protobuf:"varint,4,opt,name=interview_proposal_declined,json=interviewProposalDeclined,proto3" json:"interview_proposal_declined,omitempty"`
	OfferAccepted             bool `protobuf:"varint,5,opt,name=offer_accepted,json=offerAccepted,proto3" json:"offer_accepted,omitempty"`
	QuestExpiresSoon          bool `protobuf:"varint,6,opt,name=quest_expires_soon,json=questExpiresSoon,proto3" json:"quest_expires_soon,omitempty"`
	QuestExpires              bool `protobuf:"varint,7,opt,name=quest_expires,json=questExpires,proto3" json:"quest_expires,omitempty"`
	NoInterviews              bool `protobuf:"varint,8,opt,name=no_interviews,json=noInterviews,proto3" json:"no_interviews,omitempty"`
}

func (x *NotificationPreferences) Reset() {
	*x = NotificationPreferences{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lancr_v1_hero_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationPreferences) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationPreferences) ProtoMessage() {}

func (x *NotificationPreferences) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lancr_v1_hero_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationPreferences.ProtoReflect.Descriptor instead.
func (*NotificationPreferences) Descriptor() ([]byte, []int) {
	return file_proto_lancr_v1_hero_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationPreferences) GetQuestModified() bool {
	if x != nil {
		return x.QuestModified
	}
	return false
}

func (x *NotificationPreferences) GetProposalReceived() bool {
	if x != nil {
		return x.ProposalReceived
	}
	return false
}

func (x *NotificationPreferences) GetInterviewAccepted() bool {
	if x != nil {
		return x.InterviewAccepted
	}
	return false
}

func (x *NotificationPreferences) GetInterviewProposalDeclined() bool {
	if x != nil {
		return x.InterviewProposalDeclined
	}
	return false
}

func (x *NotificationPreferences) GetOfferAccepted() bool {
	if x != nil {
		return x.OfferAccepted
	}
	return false
}

func (x *NotificationPreferences) GetQuestExpiresSoon() bool {
	if x != nil {
		return x.QuestExpiresSoon
	}
	return false
}

func (x *NotificationPreferences) GetQuestExpires() bool {
	if x != nil {
		return x.QuestExpires
	}
	return false
}

func (x *NotificationPreferences) GetNoInterviews() bool {
	if x != nil {
		return x.NoInterviews
	}
	return false
}

type LinkedAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider   string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Credential string `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
}

func (x *LinkedAccount) Reset() {
	*x = LinkedAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lancr_v1_hero_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinkedAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedAccount) ProtoMessage() {}

func (x *LinkedAccount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lancr_v1_hero_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedAccount.ProtoReflect.Descriptor instead.
func (*LinkedAccount) Descriptor() ([]byte, []int) {
	return file_proto_lancr_v1_hero_proto_rawDescGZIP(), []int{2}
}

func (x *LinkedAccount) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *LinkedAccount) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

type Mentor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bio     string  `protobuf:"bytes,1,opt,name=bio,proto3" json:"bio,omitempty"`
	Skill   string  `protobuf:"bytes,2,opt,name=skill,proto3" json:"skill,omitempty"`
	MaxRate float32 `protobuf:"fixed32,3,opt,name=max_rate,json=maxRate,proto3" json:"max_rate,omitempty"`
	MinRate float32 `protobuf:"fixed32,4,opt,name=min_rate,json=minRate,proto3" json:"min_rate,omitempty"`
}

func (x *Mentor) Reset() {
	*x = Mentor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lancr_v1_hero_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mentor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mentor) ProtoMessage() {}

func (x *Mentor) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lancr_v1_hero_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mentor.ProtoReflect.Descriptor instead.
func (*Mentor) Descriptor() ([]byte, []int) {
	return file_proto_lancr_v1_hero_proto_rawDescGZIP(), []int{3}
}

func (x *Mentor) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Mentor) GetSkill() string {
	if x != nil {
		return x.Skill
	}
	return ""
}

func (x *Mentor) GetMaxRate() float32 {
	if x != nil {
		return x.MaxRate
	}
	return 0
}

func (x *Mentor) GetMinRate() float32 {
	if x != nil {
		return x.MinRate
	}
	return 0
}

type Experience struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position  string `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	Company   string `protobuf:"bytes,2,opt,name=company,proto3" json:"company,omitempty"`
	StartDate string `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   string `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *Experience) Reset() {
	*x = Experience{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lancr_v1_hero_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Experience) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Experience) ProtoMessage() {}

func (x *Experience) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lancr_v1_hero_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Experience.ProtoReflect.Descriptor instead.
func (*Experience) Descriptor() ([]byte, []int) {
	return file_proto_lancr_v1_hero_proto_rawDescGZIP(), []int{4}
}

func (x *Experience) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

func (x *Experience) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Experience) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *Experience) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

// TODO not sure if the behaviour REQUIRED is not deprecated?
type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount      float32 `protobuf:"fixed32,2,opt,name=amount,proto3" json:"amount,omitempty"`
	UserId      string  `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Date        string  `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Description *string `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lancr_v1_hero_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lancr_v1_hero_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_proto_lancr_v1_hero_proto_rawDescGZIP(), []int{5}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Transaction) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Transaction) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *Transaction) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type Hero struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName             string                   `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Visibility              string                   `protobuf:"bytes,3,opt,name=visibility,proto3" json:"visibility,omitempty"`
	LinkedAccounts          []*LinkedAccount         `protobuf:"bytes,4,rep,name=linked_accounts,json=linkedAccounts,proto3" json:"linked_accounts,omitempty"`
	ProfilePicture          *Image                   `protobuf:"bytes,5,opt,name=profile_picture,json=profilePicture,proto3" json:"profile_picture,omitempty"`
	Email                   string                   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber             string                   `protobuf:"bytes,7,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Name                    *Name                    `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Location                *Location                `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`
	UserName                string                   `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Bio                     string                   `protobuf:"bytes,11,opt,name=bio,proto3" json:"bio,omitempty"`
	WorkType                string                   `protobuf:"bytes,12,opt,name=work_type,json=workType,proto3" json:"work_type,omitempty"`
	SubWorkType             string                   `protobuf:"bytes,13,opt,name=sub_work_type,json=subWorkType,proto3" json:"sub_work_type,omitempty"`
	Twitter                 string                   `protobuf:"bytes,14,opt,name=twitter,proto3" json:"twitter,omitempty"`
	Linkedin                string                   `protobuf:"bytes,15,opt,name=linkedin,proto3" json:"linkedin,omitempty"`
	Website                 string                   `protobuf:"bytes,16,opt,name=website,proto3" json:"website,omitempty"`
	Bids                    []*Bid                   `protobuf:"bytes,17,rep,name=bids,proto3" json:"bids,omitempty"`
	Quests                  []*Quest                 `protobuf:"bytes,18,rep,name=quests,proto3" json:"quests,omitempty"`
	Portfolios              []string                 `protobuf:"bytes,19,rep,name=portfolios,proto3" json:"portfolios,omitempty"`
	Experiences             []*Experience            `protobuf:"bytes,20,rep,name=experiences,proto3" json:"experiences,omitempty"`
	Rating                  float32                  `protobuf:"fixed32,21,opt,name=rating,proto3" json:"rating,omitempty"`
	IsMentor                bool                     `protobuf:"varint,22,opt,name=is_mentor,json=isMentor,proto3" json:"is_mentor,omitempty"`
	Mentor                  *Mentor                  `protobuf:"bytes,23,opt,name=mentor,proto3" json:"mentor,omitempty"`
	IsApprentice            bool                     `protobuf:"varint,24,opt,name=is_apprentice,json=isApprentice,proto3" json:"is_apprentice,omitempty"`
	Apprentice              *Apprentice              `protobuf:"bytes,25,opt,name=apprentice,proto3" json:"apprentice,omitempty"`
	Xp                      string                   `protobuf:"bytes,26,opt,name=xp,proto3" json:"xp,omitempty"`
	Region                  string                   `protobuf:"bytes,27,opt,name=region,proto3" json:"region,omitempty"`
	Language                string                   `protobuf:"bytes,28,opt,name=language,proto3" json:"language,omitempty"`
	Level                   uint32                   `protobuf:"varint,29,opt,name=level,proto3" json:"level,omitempty"`
	IsVerified              bool                     `protobuf:"varint,30,opt,name=is_verified,json=isVerified,proto3" json:"is_verified,omitempty"`
	TwoFactorAuth           bool                     `protobuf:"varint,31,opt,name=two_factor_auth,json=twoFactorAuth,proto3" json:"two_factor_auth,omitempty"`
	ReceiveVerificationText bool                     `protobuf:"varint,32,opt,name=receive_verification_text,json=receiveVerificationText,proto3" json:"receive_verification_text,omitempty"`
	NotificationPreferences *NotificationPreferences `protobuf:"bytes,33,opt,name=notification_preferences,json=notificationPreferences,proto3" json:"notification_preferences,omitempty"`
	Financials              *Financials              `protobuf:"bytes,34,opt,name=financials,proto3" json:"financials,omitempty"`
}

func (x *Hero) Reset() {
	*x = Hero{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_lancr_v1_hero_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hero) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hero) ProtoMessage() {}

func (x *Hero) ProtoReflect() protoreflect.Message {
	mi := &file_proto_lancr_v1_hero_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hero.ProtoReflect.Descriptor instead.
func (*Hero) Descriptor() ([]byte, []int) {
	return file_proto_lancr_v1_hero_proto_rawDescGZIP(), []int{6}
}

func (x *Hero) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Hero) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Hero) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *Hero) GetLinkedAccounts() []*LinkedAccount {
	if x != nil {
		return x.LinkedAccounts
	}
	return nil
}

func (x *Hero) GetProfilePicture() *Image {
	if x != nil {
		return x.ProfilePicture
	}
	return nil
}

func (x *Hero) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Hero) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *Hero) GetName() *Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *Hero) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *Hero) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Hero) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Hero) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *Hero) GetSubWorkType() string {
	if x != nil {
		return x.SubWorkType
	}
	return ""
}

func (x *Hero) GetTwitter() string {
	if x != nil {
		return x.Twitter
	}
	return ""
}

func (x *Hero) GetLinkedin() string {
	if x != nil {
		return x.Linkedin
	}
	return ""
}

func (x *Hero) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *Hero) GetBids() []*Bid {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *Hero) GetQuests() []*Quest {
	if x != nil {
		return x.Quests
	}
	return nil
}

func (x *Hero) GetPortfolios() []string {
	if x != nil {
		return x.Portfolios
	}
	return nil
}

func (x *Hero) GetExperiences() []*Experience {
	if x != nil {
		return x.Experiences
	}
	return nil
}

func (x *Hero) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *Hero) GetIsMentor() bool {
	if x != nil {
		return x.IsMentor
	}
	return false
}

func (x *Hero) GetMentor() *Mentor {
	if x != nil {
		return x.Mentor
	}
	return nil
}

func (x *Hero) GetIsApprentice() bool {
	if x != nil {
		return x.IsApprentice
	}
	return false
}

func (x *Hero) GetApprentice() *Apprentice {
	if x != nil {
		return x.Apprentice
	}
	return nil
}

func (x *Hero) GetXp() string {
	if x != nil {
		return x.Xp
	}
	return ""
}

func (x *Hero) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Hero) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Hero) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Hero) GetIsVerified() bool {
	if x != nil {
		return x.IsVerified
	}
	return false
}

func (x *Hero) GetTwoFactorAuth() bool {
	if x != nil {
		return x.TwoFactorAuth
	}
	return false
}

func (x *Hero) GetReceiveVerificationText() bool {
	if x != nil {
		return x.ReceiveVerificationText
	}
	return false
}

func (x *Hero) GetNotificationPreferences() *NotificationPreferences {
	if x != nil {
		return x.NotificationPreferences
	}
	return nil
}

func (x *Hero) GetFinancials() *Financials {
	if x != nil {
		return x.Financials
	}
	return nil
}

var File_proto_lancr_v1_hero_proto protoreflect.FileDescriptor

var file_proto_lancr_v1_hero_proto_rawDesc = []byte{
	0x0a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6c, 0x61, 0x6e,
	0x63, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61,
	0x6e, 0x63, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x70, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c,
	0x61, 0x6e, 0x63, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc2, 0x01, 0x0a, 0x0a, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x2d, 0x0a, 0x12, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11,
	0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x45, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xfb, 0x02, 0x0a, 0x17, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12,
	0x2d, 0x0a, 0x12, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x3e,
	0x0a, 0x1b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x6c, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x73, 0x6f, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x71, 0x75, 0x65, 0x73, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x53,
	0x6f, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x6f, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0c, 0x6e, 0x6f, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x69, 0x65, 0x77, 0x73, 0x22, 0x4b, 0x0a,
	0x0d, 0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x66, 0x0a, 0x06, 0x4d, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x6d, 0x61, 0x78, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07,
	0x6d, 0x61, 0x78, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x69, 0x6e, 0x5f, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x52, 0x61,
	0x74, 0x65, 0x22, 0x7c, 0x0a, 0x0a, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x22, 0xad, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41,
	0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03,
	0xe0, 0x41, 0x02, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01,
	0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x82, 0x0a, 0x0a, 0x04, 0x48, 0x65, 0x72, 0x6f, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x03, 0xe0, 0x41, 0x02, 0x52,
	0x0a, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x40, 0x0a, 0x0f, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x6c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a,
	0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x62, 0x69, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x57, 0x6f, 0x72, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x64, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65,
	0x62, 0x73, 0x69, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62,
	0x73, 0x69, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x62, 0x69, 0x64, 0x73, 0x18, 0x11, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x64, 0x52, 0x04, 0x62, 0x69, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x06, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x52, 0x06, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x18, 0x13,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73,
	0x12, 0x36, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x70, 0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0b, 0x65, 0x78, 0x70,
	0x65, 0x72, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x4d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x12, 0x28, 0x0a,
	0x06, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x52,
	0x06, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x61, 0x70,
	0x70, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x41, 0x70, 0x70, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x0a,
	0x61, 0x70, 0x70, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x65, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x72, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x78, 0x70, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x78, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x77, 0x6f, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x77, 0x6f, 0x46, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x3a, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x65,
	0x78, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x5c, 0x0a, 0x18, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x17, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x34, 0x0a, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x73, 0x6f, 0x6c, 0x74, 0x64, 0x2f, 0x6c, 0x61, 0x6e, 0x63, 0x72,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x6c, 0x61, 0x6e, 0x63, 0x72, 0x2f, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_lancr_v1_hero_proto_rawDescOnce sync.Once
	file_proto_lancr_v1_hero_proto_rawDescData = file_proto_lancr_v1_hero_proto_rawDesc
)

func file_proto_lancr_v1_hero_proto_rawDescGZIP() []byte {
	file_proto_lancr_v1_hero_proto_rawDescOnce.Do(func() {
		file_proto_lancr_v1_hero_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_lancr_v1_hero_proto_rawDescData)
	})
	return file_proto_lancr_v1_hero_proto_rawDescData
}

var file_proto_lancr_v1_hero_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_lancr_v1_hero_proto_goTypes = []interface{}{
	(*Financials)(nil),              // 0: lancr.v1.Financials
	(*NotificationPreferences)(nil), // 1: lancr.v1.NotificationPreferences
	(*LinkedAccount)(nil),           // 2: lancr.v1.LinkedAccount
	(*Mentor)(nil),                  // 3: lancr.v1.Mentor
	(*Experience)(nil),              // 4: lancr.v1.Experience
	(*Transaction)(nil),             // 5: lancr.v1.Transaction
	(*Hero)(nil),                    // 6: lancr.v1.Hero
	(*Image)(nil),                   // 7: lancr.v1.Image
	(*Name)(nil),                    // 8: lancr.v1.Name
	(*Location)(nil),                // 9: lancr.v1.Location
	(*Bid)(nil),                     // 10: lancr.v1.Bid
	(*Quest)(nil),                   // 11: lancr.v1.Quest
	(*Apprentice)(nil),              // 12: lancr.v1.Apprentice
}
var file_proto_lancr_v1_hero_proto_depIdxs = []int32{
	2,  // 0: lancr.v1.Hero.linked_accounts:type_name -> lancr.v1.LinkedAccount
	7,  // 1: lancr.v1.Hero.profile_picture:type_name -> lancr.v1.Image
	8,  // 2: lancr.v1.Hero.name:type_name -> lancr.v1.Name
	9,  // 3: lancr.v1.Hero.location:type_name -> lancr.v1.Location
	10, // 4: lancr.v1.Hero.bids:type_name -> lancr.v1.Bid
	11, // 5: lancr.v1.Hero.quests:type_name -> lancr.v1.Quest
	4,  // 6: lancr.v1.Hero.experiences:type_name -> lancr.v1.Experience
	3,  // 7: lancr.v1.Hero.mentor:type_name -> lancr.v1.Mentor
	12, // 8: lancr.v1.Hero.apprentice:type_name -> lancr.v1.Apprentice
	1,  // 9: lancr.v1.Hero.notification_preferences:type_name -> lancr.v1.NotificationPreferences
	0,  // 10: lancr.v1.Hero.financials:type_name -> lancr.v1.Financials
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_lancr_v1_hero_proto_init() }
func file_proto_lancr_v1_hero_proto_init() {
	if File_proto_lancr_v1_hero_proto != nil {
		return
	}
	file_proto_lancr_v1_apprentice_proto_init()
	file_proto_lancr_v1_bid_proto_init()
	file_proto_lancr_v1_common_proto_init()
	file_proto_lancr_v1_quest_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_lancr_v1_hero_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Financials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lancr_v1_hero_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationPreferences); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lancr_v1_hero_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinkedAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lancr_v1_hero_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mentor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lancr_v1_hero_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Experience); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lancr_v1_hero_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_lancr_v1_hero_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hero); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_lancr_v1_hero_proto_msgTypes[5].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_lancr_v1_hero_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_lancr_v1_hero_proto_goTypes,
		DependencyIndexes: file_proto_lancr_v1_hero_proto_depIdxs,
		MessageInfos:      file_proto_lancr_v1_hero_proto_msgTypes,
	}.Build()
	File_proto_lancr_v1_hero_proto = out.File
	file_proto_lancr_v1_hero_proto_rawDesc = nil
	file_proto_lancr_v1_hero_proto_goTypes = nil
	file_proto_lancr_v1_hero_proto_depIdxs = nil
}
