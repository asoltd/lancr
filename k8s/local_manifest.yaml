# Gateway service
# TODO(piotrostr):
# - think about the right spec.ingressClassName
# - add spec.tls for https
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: default
  labels:
    app.kubernetes.io/name: gateway-service
spec:
  selector:
    app.kubernetes.io/name: gateway
  ports:
    - protocol: TCP
      port: 4200
      targetPort: 4200

---
# Gateway deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: default
  labels:
    app.kubernetes.io/name: gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gateway
    spec:
      containers:
        - name: gateway
          image: piotrostr/lancr:latest
          command:
            [
              "./lancr",
              "gateway",
              "--grpc-server-addr",
              "server-service.default.svc.cluster.local:4201",
              "--auth-service-addr",
              "auth-service.default.svc.cluster.local:42069"
            ]
          ports:
            - containerPort: 4200
          env:
            # set this to false for local deployments
            - name: RUN_OPENAPI
              value: "false"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "250m"

---
# Server service
apiVersion: v1
kind: Service
metadata:
  name: server-service
  namespace: default
  labels:
    app.kubernetes.io/name: server-service
spec:
  selector:
    app.kubernetes.io/name: server
  ports:
    - protocol: TCP
      port: 4201
      targetPort: 4201

---
# Server deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server
  namespace: default
  labels:
    app.kubernetes.io/name: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server
    spec:
      # serviceAccountName: heroes-sa
      # nodeSelector:
      #   iam.gke.io/gke-metadata-server-enabled: "true"
      containers:
        - name: server
          image: piotrostr/lancr:latest
          envFrom:
            - secretRef:
                name: tidb-secret
          command: [
            "./lancr",
            "server", 
            "--auth-service-addr",
            "auth-service.default.svc.cluster.local:42069",
          ]
          ports:
            - containerPort: 4201
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "250m"

---
# Auth Service
apiVersion: v1
kind: Service
metadata:
  name: auth-service
  namespace: default
  labels:
    app.kubernetes.io/name: auth-service
spec:
  selector:
    app.kubernetes.io/name: auth
  ports:
    - protocol: TCP
      port: 42069
      targetPort: 42069

---
# Auth Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
  namespace: default
  labels:
    app.kubernetes.io/name: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: auth
  template:
    metadata:
      labels:
        app.kubernetes.io/name: auth
    spec:
      # below is required at GKE to use the service account
      # for minikube the service key can be mounted for all of the services
      # (debug mode)
      # serviceAccountName: heroes-sa
      # nodeSelector:
      #   iam.gke.io/gke-metadata-server-enabled: "true"
      containers:
        - name: auth
          image: piotrostr/lancr:latest
          command: ["./lancr", "auth"]
          ports:
            - containerPort: 4201
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "256Mi"
              cpu: "250m"
